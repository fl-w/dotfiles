{"version":3,"sources":["../../webpack/bootstrap","../.././node_modules/png-js/png-node.js","../../external \"zlib\"","../../external \"fs\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fs","zlib","PNG","data","chunkSize","colors","index","short","text","_i","_j","_ref","this","pos","palette","imgData","transparency","readUInt32","_results","push","String","fromCharCode","join","width","height","bits","colorType","compressionMethod","filterMethod","interlaceMethod","read","indexed","length","grayscale","rgb","indexOf","apply","slice","hasAlphaChannel","pixelBitlength","colorSpace","Buffer","Error","decode","path","fn","readFile","err","file","pixels","load","readFileSync","bytes","readUInt16","decodePixels","_this","inflate","byte","col","left","pa","paeth","pb","pc","pixelBytes","row","scanlineLength","upper","upperLeft","_k","_l","_m","Math","floor","abs","decodePalette","ret","_ref1","copyToImageData","imageData","alpha","input","j","k","v","_decodedPalette","require"],"mappings":"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","file":"node_modules/png-js.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 244);\n","// Generated by CoffeeScript 1.4.0\n\n/*\n# MIT LICENSE\n# Copyright (c) 2011 Devon Govett\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy of this \n# software and associated documentation files (the \"Software\"), to deal in the Software \n# without restriction, including without limitation the rights to use, copy, modify, merge, \n# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons \n# to whom the Software is furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all copies or \n# substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \n# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n(function() {\n  var PNG, fs, zlib;\n\n  fs = require('fs');\n\n  zlib = require('zlib');\n\n  module.exports = PNG = (function() {\n\n    PNG.decode = function(path, fn) {\n      return fs.readFile(path, function(err, file) {\n        var png;\n        png = new PNG(file);\n        return png.decode(function(pixels) {\n          return fn(pixels);\n        });\n      });\n    };\n\n    PNG.load = function(path) {\n      var file;\n      file = fs.readFileSync(path);\n      return new PNG(file);\n    };\n\n    function PNG(data) {\n      var chunkSize, colors, i, index, key, section, short, text, _i, _j, _ref;\n      this.data = data;\n      this.pos = 8;\n      this.palette = [];\n      this.imgData = [];\n      this.transparency = {};\n      this.text = {};\n      while (true) {\n        chunkSize = this.readUInt32();\n        section = ((function() {\n          var _i, _results;\n          _results = [];\n          for (i = _i = 0; _i < 4; i = ++_i) {\n            _results.push(String.fromCharCode(this.data[this.pos++]));\n          }\n          return _results;\n        }).call(this)).join('');\n        switch (section) {\n          case 'IHDR':\n            this.width = this.readUInt32();\n            this.height = this.readUInt32();\n            this.bits = this.data[this.pos++];\n            this.colorType = this.data[this.pos++];\n            this.compressionMethod = this.data[this.pos++];\n            this.filterMethod = this.data[this.pos++];\n            this.interlaceMethod = this.data[this.pos++];\n            break;\n          case 'PLTE':\n            this.palette = this.read(chunkSize);\n            break;\n          case 'IDAT':\n            for (i = _i = 0; _i < chunkSize; i = _i += 1) {\n              this.imgData.push(this.data[this.pos++]);\n            }\n            break;\n          case 'tRNS':\n            this.transparency = {};\n            switch (this.colorType) {\n              case 3:\n                this.transparency.indexed = this.read(chunkSize);\n                short = 255 - this.transparency.indexed.length;\n                if (short > 0) {\n                  for (i = _j = 0; 0 <= short ? _j < short : _j > short; i = 0 <= short ? ++_j : --_j) {\n                    this.transparency.indexed.push(255);\n                  }\n                }\n                break;\n              case 0:\n                this.transparency.grayscale = this.read(chunkSize)[0];\n                break;\n              case 2:\n                this.transparency.rgb = this.read(chunkSize);\n            }\n            break;\n          case 'tEXt':\n            text = this.read(chunkSize);\n            index = text.indexOf(0);\n            key = String.fromCharCode.apply(String, text.slice(0, index));\n            this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\n            break;\n          case 'IEND':\n            this.colors = (function() {\n              switch (this.colorType) {\n                case 0:\n                case 3:\n                case 4:\n                  return 1;\n                case 2:\n                case 6:\n                  return 3;\n              }\n            }).call(this);\n            this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;\n            colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n            this.pixelBitlength = this.bits * colors;\n            this.colorSpace = (function() {\n              switch (this.colors) {\n                case 1:\n                  return 'DeviceGray';\n                case 3:\n                  return 'DeviceRGB';\n              }\n            }).call(this);\n            this.imgData = new Buffer(this.imgData);\n            return;\n          default:\n            this.pos += chunkSize;\n        }\n        this.pos += 4;\n        if (this.pos > this.data.length) {\n          throw new Error(\"Incomplete or corrupt PNG file\");\n        }\n      }\n      return;\n    }\n\n    PNG.prototype.read = function(bytes) {\n      var i, _i, _results;\n      _results = [];\n      for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {\n        _results.push(this.data[this.pos++]);\n      }\n      return _results;\n    };\n\n    PNG.prototype.readUInt32 = function() {\n      var b1, b2, b3, b4;\n      b1 = this.data[this.pos++] << 24;\n      b2 = this.data[this.pos++] << 16;\n      b3 = this.data[this.pos++] << 8;\n      b4 = this.data[this.pos++];\n      return b1 | b2 | b3 | b4;\n    };\n\n    PNG.prototype.readUInt16 = function() {\n      var b1, b2;\n      b1 = this.data[this.pos++] << 8;\n      b2 = this.data[this.pos++];\n      return b1 | b2;\n    };\n\n    PNG.prototype.decodePixels = function(fn) {\n      var _this = this;\n      return zlib.inflate(this.imgData, function(err, data) {\n        var byte, c, col, i, left, length, p, pa, paeth, pb, pc, pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, _k, _l, _m;\n        if (err) {\n          throw err;\n        }\n        pixelBytes = _this.pixelBitlength / 8;\n        scanlineLength = pixelBytes * _this.width;\n        pixels = new Buffer(scanlineLength * _this.height);\n        length = data.length;\n        row = 0;\n        pos = 0;\n        c = 0;\n        while (pos < length) {\n          switch (data[pos++]) {\n            case 0:\n              for (i = _i = 0; _i < scanlineLength; i = _i += 1) {\n                pixels[c++] = data[pos++];\n              }\n              break;\n            case 1:\n              for (i = _j = 0; _j < scanlineLength; i = _j += 1) {\n                byte = data[pos++];\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                pixels[c++] = (byte + left) % 256;\n              }\n              break;\n            case 2:\n              for (i = _k = 0; _k < scanlineLength; i = _k += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                pixels[c++] = (upper + byte) % 256;\n              }\n              break;\n            case 3:\n              for (i = _l = 0; _l < scanlineLength; i = _l += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                pixels[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n              }\n              break;\n            case 4:\n              for (i = _m = 0; _m < scanlineLength; i = _m += 1) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n                if (row === 0) {\n                  upper = upperLeft = 0;\n                } else {\n                  upper = pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\n                  upperLeft = col && pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % pixelBytes)];\n                }\n                p = left + upper - upperLeft;\n                pa = Math.abs(p - left);\n                pb = Math.abs(p - upper);\n                pc = Math.abs(p - upperLeft);\n                if (pa <= pb && pa <= pc) {\n                  paeth = left;\n                } else if (pb <= pc) {\n                  paeth = upper;\n                } else {\n                  paeth = upperLeft;\n                }\n                pixels[c++] = (byte + paeth) % 256;\n              }\n              break;\n            default:\n              throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n          }\n          row++;\n        }\n        return fn(pixels);\n      });\n    };\n\n    PNG.prototype.decodePalette = function() {\n      var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;\n      palette = this.palette;\n      transparency = this.transparency.indexed || [];\n      ret = new Buffer(transparency.length + palette.length);\n      pos = 0;\n      length = palette.length;\n      c = 0;\n      for (i = _i = 0, _ref = palette.length; _i < _ref; i = _i += 3) {\n        ret[pos++] = palette[i];\n        ret[pos++] = palette[i + 1];\n        ret[pos++] = palette[i + 2];\n        ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;\n      }\n      return ret;\n    };\n\n    PNG.prototype.copyToImageData = function(imageData, pixels) {\n      var alpha, colors, data, i, input, j, k, length, palette, v, _ref;\n      colors = this.colors;\n      palette = null;\n      alpha = this.hasAlphaChannel;\n      if (this.palette.length) {\n        palette = (_ref = this._decodedPalette) != null ? _ref : this._decodedPalette = this.decodePalette();\n        colors = 4;\n        alpha = true;\n      }\n      data = (imageData != null ? imageData.data : void 0) || imageData;\n      length = data.length;\n      input = palette || pixels;\n      i = j = 0;\n      if (colors === 1) {\n        while (i < length) {\n          k = palette ? pixels[i / 4] * 4 : j;\n          v = input[k++];\n          data[i++] = v;\n          data[i++] = v;\n          data[i++] = v;\n          data[i++] = alpha ? input[k++] : 255;\n          j = k;\n        }\n      } else {\n        while (i < length) {\n          k = palette ? pixels[i / 4] * 4 : j;\n          data[i++] = input[k++];\n          data[i++] = input[k++];\n          data[i++] = input[k++];\n          data[i++] = alpha ? input[k++] : 255;\n          j = k;\n        }\n      }\n    };\n\n    PNG.prototype.decode = function(fn) {\n      var ret,\n        _this = this;\n      ret = new Buffer(this.width * this.height * 4);\n      return this.decodePixels(function(pixels) {\n        _this.copyToImageData(ret, pixels);\n        return fn(ret);\n      });\n    };\n\n    return PNG;\n\n  })();\n\n}).call(this);\n","module.exports = require(\"zlib\");","module.exports = require(\"fs\");"],"sourceRoot":""}