<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>fish</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!.*(fish)</string>
	<key>foldingStartMarker</key>
	<string>^\s*(function|while|if|switch|for|begin)\s.*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*end\s*$</string>
	<key>keyEquivalent</key>
	<string>^~F</string>
	<key>name</key>
	<string>fish</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fish</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Single quoted string</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fish</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.fish</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\"|\\\$|\\\\</string>
					<key>name</key>
					<string>constant.character.escape.fish</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fish</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>single quoted string</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fish</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.fish</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\'|\\</string>
					<key>name</key>
					<string>constant.character.escape.fish</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fish</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>line comment</string>
			<key>match</key>
			<string>(?&lt;!\$)(#)(?!\{).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.fish</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>control structures requiring an end</string>
			<key>match</key>
			<string>(?&lt;!\.)\b(function|while|if|else|switch|for|in|end)\b(?![?!])</string>
			<key>name</key>
			<string>keyword.control.fish</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\bfunction\b(?![?!])</string>
			<key>name</key>
			<string>storage.type.fish</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\|</string>
			<key>name</key>
			<string>keyword.operator.pipe.fish</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>IO Redirection</string>
			<key>match</key>
			<string>(?x:
			&lt;|				# Standard Input
			(&gt;|\^|&gt;&gt;|\^\^)(&amp;[012\-])?| # Redirection of stdout/stderr
			[012](&lt;|&gt;|&gt;&gt;)(&amp;[012\-])? # Redirect input/output of file descriptors
			)</string>
			<key>name</key>
			<string>keyword.operator.redirect.fish</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&amp;</string>
			<key>name</key>
			<string>keyword.operator.background.fish</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\*\*|\*|\?</string>
			<key>name</key>
			<string>keyword.operator.glob.fish</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.other.option.fish</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>command short/long options</string>
			<key>match</key>
			<string>\s(-{1,2}[a-zA-Z_\-0-9]+|-\w)\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>builtin shellscript functions</string>
			<key>match</key>
			<string>(?x)\b(
			_|__fish_append|__fish_bind_test1|__fish_bind_test2|__fish_commandline_test|
			__fish_complete_ant_targets|__fish_complete_bittorrent|__fish_complete_cd|
			__fish_complete_command|__fish_complete_directories|__fish_complete_file_url|
			__fish_complete_groups|__fish_complete_ls|__fish_complete_man|
			__fish_complete_mime|__fish_complete_pids|__fish_complete_ssh|
			__fish_complete_subcommand|__fish_complete_subcommand_root|
			__fish_complete_suffix|__fish_complete_tar|__fish_complete_tex|
			__fish_complete_unrar|__fish_complete_users|__fish_complete_vi|
			__fish_config_interactive|__fish_contains_opt|__fish_crux_packages|
			__fish_describe_command|__fish_filter_ant_targets|__fish_filter_mime|
			__fish_gnu_complete|__fish_is_first_token|__fish_list_current_token|
			__fish_move_last|__fish_no_arguments|__fish_not_contain_opt|__fish_paginate|
			__fish_ports_dirs|__fish_print_addresses|__fish_print_encodings|
			__fish_print_filesystems|__fish_print_function_prototypes|__fish_print_help|
			__fish_print_hostnames|__fish_print_interfaces|__fish_print_make_targets|
			__fish_print_packages|__fish_print_users|__fish_prt_no_subcommand|
			__fish_prt_packages|__fish_prt_ports|__fish_prt_use_package|
			__fish_prt_use_port|__fish_reload_key_bindings|__fish_repaint|
			__fish_repaint_root|__fish_seen_subcommand_from|__fish_test_arg|
			__fish_use_subcommand|__fish_winch_handler|alias|cd|delete-or-exit|dirh|
			dirs|down-or-search|eval|fish_default_key_bindings|fish_on_exit|
			fish_prompt|fish_sigtrap_handler|funced|funcsave|grep|help|isatty|la|ll|
			ls|math|N_|nextd|nextd-or-forward-word|open|popd|prevd|
			prevd-or-backward-word|prompt_pwd|psub|pushd|pwd|setenv|sgrep|trap|type|
			umask|up-or-search|vared
			)\b</string>
			<key>name</key>
			<string>support.function.script.fish</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>builtin commands listed by builtin -n</string>
			<key>match</key>
			<string>(?x)\b(
			\s\.\s|and|begin|bg|bind|block|break|breakpoint|builtin|case|cd|command|
			commandline|complete|contains|continue|count|else|emit|end|exec|exit|
			fg|for|function|functions|if|jobs|not|or|random|read|return|set|
			status|switch|ulimit|while
			)\b</string>
			<key>name</key>
			<string>support.function.builtin.fish</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>standard Unix utilities as specified in IEEE Std 1003.1 (2004 edition)</string>
			<key>match</key>
			<string>(?x)\b(
			admin|alias|ar|asa|at|awk|basename|batch|bc|bg|break|c99|cal|cat|
			cd|cflow|chgrp|chmod|chown|cksum|cmp|colon|comm|command|compress|
			continue|cp|crontab|csplit|ctags|cut|cxref|date|dd|delta|df|diff|
			dirname|dot|du|echo|ed|env|eval|ex|exec|exit|expand|export|expr|
			false|fc|fg|file|find|fold|fort77|fuser|gencat|get|getconf|getopts|
			grep|hash|head|iconv|id|ipcrm|ipcs|jobs|join|kill|lex|link|ln|
			locale|localedef|logger|logname|lp|ls|m4|mailx|make|man|mesg|mkdir|
			mkfifo|more|mv|newgrp|nice|nl|nm|nohup|od|paste|patch|pathchk|pax|
			pr|printf|prs|ps|pwd|qalter|qdel|qhold|qmove|qmsg|qrerun|qrls|
			qselect|qsig|qstat|qsub|read|readonly|renice|return|rm|rmdel|rmdir|
			sact|sccs|sed|set|sh|shift|sleep|sort|split|strings|strip|stty|tabs|
			tail|talk|tee|test|time|times|touch|tput|tr|trap|true|tsort|tty|
			type|ulimit|umask|unalias|uname|uncompress|unexpand|unget|uniq|unlink|
			unset|uucp|uudecode|uuencode|uustat|uux|val|vi|wait|wc|what|who|
			write|xargs|yacc|zcat
			)\b</string>
			<key>name</key>
			<string>support.function.unix.fish</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#escape</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>escape</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>single character character escape sequences</string>
					<key>match</key>
					<string>\\(a|b|e|f|n|r|t|v|\s|\$|\\|\*|\?|~|\%|#|(|)|{|}|\[|\]|&lt;|&gt;|\^)</string>
					<key>name</key>
					<string>constant.character.escape.single.fish</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>escapes the ascii character with the specified value (hexadecimal)</string>
					<key>match</key>
					<string>\\x[0-9a-fA-F]{2}</string>
					<key>name</key>
					<string>constant.character.escape.hex-ascii.fish</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>escapes a byte of data with the specified value (hexadecimal).
					If you are using a mutibyte encoding, this can be used to enter invalid strings.
					Only use this if you know what you are doing.</string>
					<key>match</key>
					<string>\\X[0-9a-fA-F]{2}</string>
					<key>name</key>
					<string>constant.character.escape.hex-byte.fish</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>escapes the ascii character with the specified value (octal)</string>
					<key>match</key>
					<string>\\[0-9]{3}</string>
					<key>name</key>
					<string>constant.character.escape.octal.fish</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>escapes the 16-bit unicode character with the specified value (hexadecimal)</string>
					<key>match</key>
					<string>\\u[0-9a-fA-F]{4}</string>
					<key>name</key>
					<string>constant.character.escape.unicode-16-bit.fish</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>escapes the 32-bit unicode character with the specified value (hexadecimal)</string>
					<key>match</key>
					<string>\\U[0-9a-fA-F]{8}</string>
					<key>name</key>
					<string>constant.character.escape.unicode-32-bit.fish</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>escapes the control sequence generated by pressing the control key and the specified letter</string>
					<key>match</key>
					<string>\\c[a-zA-Z]</string>
					<key>name</key>
					<string>constant.character.escape.control.fish</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.fish</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)(\$)(BROWSER|CDPATH|fish_greeting|LANG|LC_ALL|LC_COLLATE|
									LC_CTYPE|LC_MESSAGES|LC_MONETARY|LC_NUMERIC|LC_TIME|PATH|
									umask|fish_color_command|fish_color_comment|fish_color_cwd|fish_color_cwd_root|
									fish_color_error|fish_color_escape|fish_color_history_current|
									fish_color_match|fish_color_normal|fish_color_operator|fish_color_quote|
									fish_color_redirection|fish_color_search_match|fish_color_valid_path|
									fish_complete_path|fish_function_path|fish_greeting|fish_key_bindings|
									fish_pager_color_completion|fish_pager_color_description|
									fish_pager_color_prefix|fish_pager_color_progress)</string>
					<key>name</key>
					<string>variable.other.special.fish</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.fish</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)(_|argv|history|HOME|PWD|status|USER)</string>
					<key>name</key>
					<string>variable.other.fixed.fish</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.fish</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)__(fish|FISH)[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>variable.other.fish.fish</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.fish</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>variable.other.normal.fish</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.fish</string>
	<key>uuid</key>
	<string>9CA6DB6F-A16F-4836-A058-617C7378775D</string>
</dict>
</plist>
