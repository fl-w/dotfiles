{
    "java.debugger.launch.projectName.description": "The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects. This setting also works when the debugger looks for the specified main class when launching a program. It is required for expression evaluation.",
    "java.debugger.launch.mainClass.description": "The fully qualified class name (e.g. [java module name/]com.xyz.MainApp) or the java file path of the program entry.",
    "java.debugger.launch.args.description": "The command line arguments passed to the program.",
    "java.debugger.launch.vmArgs.description": "The extra options and system properties for the JVM (e.g. -Xms<size> -Xmx<size> -D<name>=<value>).",
    "java.debugger.launch.modulePaths.description": "The modulepaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.",
    "java.debugger.launch.classPaths.description": "The classpaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.",
    "java.debugger.launch.sourcePaths.description": "The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories.",
    "java.debugger.launch.encoding.description": "The file.encoding setting for the JVM. If not specified, 'UTF-8' will be used. Possible values can be found in http://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html.",
    "java.debugger.launch.cwd.description": "The working directory of the program. Defaults to the current workspace root.",
    "java.debugger.launch.env.description": "The extra environment variables for the program.",
    "java.debugger.launch.stopOnEntry.description": "Automatically pause the program after launching.",
    "java.debugger.launch.internalConsole.description": "VS Code debug console (input stream not supported).",
    "java.debugger.launch.integratedTerminal.description": "VS Code integrated terminal.",
    "java.debugger.launch.externalTerminal.description": "External terminal that can be configured in user settings.",
    "java.debugger.launch.console.description": "The specified console to launch the program.",
    "java.debugger.launch.shortenCommandLine.auto": "Automatically detect the command line length and determine whether to shorten the command line via an appropriate approach.",
    "java.debugger.launch.shortenCommandLine.none": "Launch the program with the standard command line 'java [options] classname [args]'.",
    "java.debugger.launch.shortenCommandLine.jarmanifest": "Generate the classpath parameters to a temporary classpath.jar file, and launch the program with the command line 'java -cp classpath.jar classname [args]'.",
    "java.debugger.launch.shortenCommandLine.argfile": "Generate the classpath parameters to a temporary argument file, and launch the program with the command line 'java @argfile [args]'. This value only applies to Java 9 and higher.",
    "java.debugger.launch.shortenCommandLine.description": "When the project has long classpath or big VM arguments, the command line to launch the program may exceed the maximum command line string limitation allowed by the OS. This configuration item provides multiple approaches to shorten the command line.",
    "java.debugger.launch.stepFilters.description": "Skip specified classes or methods when stepping.",
    "java.debugger.launch.classNameFilters.description": "Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.",
    "java.debugger.launch.skipSynthetics.description": "Skip synthetic methods when stepping.",
    "java.debugger.launch.skipStaticInitializers.description": "Skip static initializer methods when stepping.",
    "java.debugger.launch.skipConstructors.description": "Skip constructor methods when stepping.",
    "java.debugger.attach.hostName.description": "The host name or ip address of remote debuggee.",
    "java.debugger.attach.port.description": "The debug port of remote debuggee.",
    "java.debugger.attach.timeout.description": "Timeout value before reconnecting, in milliseconds (default to 30000ms).",
    "java.debugger.attach.projectName.description": "The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects.",
    "java.debugger.snippet.launch.description": "Add a new configuration for launching a java program.",
    "java.debugger.snippet.launchInExternalTerminal.description": "Add a new configuration for launching a java program in the external terminal.",
    "java.debugger.snippet.launchCurrentFile.description": "Add a new configuration for launching current java file.",
    "java.debugger.snippet.launchWithArgumentsPrompt.description": "Add a new configuration for launching a java program with arguments prompt.",
    "java.debugger.snippet.attach.description": "Add a new configuration for attaching to a running java program.",
    "java.debugger.snippet.attachRemote.description": "Add a new configuration for attaching to a remote java program.",
    "java.debugger.configuration.title": "Java Debugger",
    "java.debugger.configuration.logLevel.description": "Minimum level of debugger logs that are sent to VS Code.",
    "java.debugger.configuration.showHex.description": "Show numbers in hex format in \"Variables\" viewlet.",
    "java.debugger.configuration.showStaticVariables.description": "Show static variables in \"Variables\" viewlet.",
    "java.debugger.configuration.showQualifiedNames.description": "Show fully qualified class names in \"Variables\" viewlet.",
    "java.debugger.configuration.showLogicalStructure.description": "Show the logical structure for the Collection and Map classes in \"Variables\" viewlet.",
    "java.debugger.configuration.showToString.description": "Show 'toString()' value for all classes that override 'toString' method in \"Variables\" viewlet.",
    "java.debugger.configuration.maxStringLength.description": "The maximum length of strings displayed in \"Variables\" or \"Debug Console\" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.",
    "java.debugger.configuration.hotCodeReplace.description": "Reload the changed Java classes during debugging. Make sure 'java.autobuild.enabled' is not disabled.",
    "java.debugger.configuration.enableRunDebugCodeLens.description": "Enable the run and debug code lens providers over main methods.",
    "java.debugger.configuration.forceBuildBeforeLaunch": "Force building the workspace before launching java program.",
    "java.debugger.configuration.console": "The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json."
}
