#!/usr/bin/env bash

# shitty wallpaper
# https://github.com/folws
# TODO: update bad script

PREV_NAME=.fehbg.prev
PROGRAM_NAME=$(basename "$0")
VERBOSE=0

: "${COLOR_BG:=#06070a}"
: "${ALPHA:=55}"
: "${WALLPAPERS:=$HOME/.wallpapers}"

# colors
CLEAR='\033[0m'
RED='\033[0;31m'

# =====================
is_valid_hex() {
    case $1 in
      *[!0-9A-Fa-f]* | "" ) return 1 ;;
      *)
        case ${#1} in
          32 | 40 ) return 0 ;;
          * )       return 1 ;;
        esac
    esac
  }

set_prev() {
  if [ -z "$1" ]; then
    show_help "specify a valid file name for the previous .fehbg: --prev <file>"
  fi

  PREV_NAME=$1
}

set_background() {
  local color=$1
  if [ ! -z color ]; then
    is_valid_hex color

    if [ $? == 1 ]; then
      COLOR_BG=$color
      return 0
    fi
  else
    color="color"
  fi

  show_help "specify a valid background color code: --bg <$color>"
  exit 1
}

find_prev() {
  # check ~ ~/.config ~/.config/feh for previous fehbg
  dirs=(
    $HOME
    $HOME/.config
    $HOME/.config/feh
  )

  for dir in $dirs; do
    local file=$dir/$PREV_NAME
    if [ -f "$file" ]; then
      echo $(sed -e "s/^'//" -e "s/'$//" <<<"$(cat "$file" | grep feh | cut -d ' ' -f 4)")
      rm $file
      break
    fi
  done
}

show_help() {
  if [ -n "$1" ]; then
    echo -e "${RED}ðŸ‘‰ $1${CLEAR}\n";
  fi

   # Display Help
   echo "Shitty wallpaper setter" >&2
   echo
   echo "Usage: $PROGRAM_NAME [...options] [next|prev|<WALLPAPERS_TO_IMAGE>]"
   echo "options:"
   echo " -b, --bg <color>       the pywal bg color"
   echo " -a, --alpha <alpha>    the pywal color alpha"
   echo " -p, --prev <name>      the file name of the prev .fehbg"
   echo " -r, --refresh          refresh the colors from the curr wal"
   echo " -h, --help             show this help text"
   echo " -v  --verbose          run in verbose mode."
   echo
}

parse_args() {
  NEXT=-1
  while [[ "$#" > 0 ]]; do case $1 in
    n|next) NEXT=1; break;;
    p|prev) NEXT=0; break;;
    -b|--bg) set_background $2; shift;;
    -a|--ALPHA) ALPHA="$2"; shift;;
    -p|--prev) set_prev $2; shift;;
    -R|--refresh) [ $NEXT -lt 0 ] && { NEXT=0; PREV_NAME='.fehbg'; } || { show_help "Cannot pass --refresh with next/prev"; exit 1; };;
    -q|--quiet) VERBOSE=1;;
    -h|--help) show_help; exit 0;;
    *) WALLPAPERS="$1"; NEXT=1;;

  esac; shift; done

  if [ $NEXT -lt 0 ]; then
    show_help "Please specify a direction or a path to an image."
    exit 1
  fi

}

change_next() {
  [ -f ~/.fehbg ] && cp ~/.fehbg ~/$PREV_NAME

  echo "Setting next wallpaper with wal"
  wal -a "$ALPHA" -b "$COLOR_BG" --iterative -q -i $WALLPAPERS || echo "Could not call pywal with: '$WALLPAPERS'"
}

change_prev() {
  PREV_WAL=$(find_prev)

  if [ -z $PREV_WAL ]; then
    show_help "no prev .fehbg found"
    exit 1
  fi

  echo "Setting wallpaper to " $PREV_WAL
  wal -a "$ALPHA" -b "$COLOR_BG" -i "$PREV_WAL" >/dev/null 2>&1
}

main() {
  parse_args "$@"

  if [ $VERBOSE == 1 ]; then exec >/dev/null 2>&1; fi

  if [ "$NEXT" == 1 ]; then
    change_next
  else
    change_prev
  fi
}

main "$@"
