#
#  $$$$$$\  $$$$$$\         $$$$$$\   $$$$$$\  $$$$$$$\   $$$$$$\
#  \_$$  _|$$ ___$$\       $$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\
#    $$ |  \_/   $$ |      $$ /  \__|$$ /  $$ |$$ |  $$ |$$ /  \__|
#    $$ |    $$$$$ /       $$ |$$$$\ $$$$$$$$ |$$$$$$$  |\$$$$$$\
#    $$ |    \___$$\       $$ |\_$$ |$$  __$$ |$$  ____/  \____$$\
#    $$ |  $$\   $$ |      $$ |  $$ |$$ |  $$ |$$ |      $$\   $$ |
#  $$$$$$\ \$$$$$$  |      \$$$$$$  |$$ |  $$ |$$ |      \$$$$$$  |
#  \______| \______/        \______/ \__|  \__|\__|       \______/
#
#
# @fl-w

# Set variables {{{
set $wallpapers           $HOME/.wallpapers
set $browser              $BROWSER
set $music                spotify
set $term                 kitty
set $scripts              $XDG_CONFIG_HOME/i3/scripts
set $bin                  $HOME/bin
set $outer_gaps           10
set $inner_gaps           20
set $border               none
set $mod                  Mod4
set $alt_mod              Mod1

set $primary_monitor      DP-3
set $secondary_monitor    DP-2

# Define names for default workspaces for which we configure key bindings later on.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0"
# }}}

font pango:mononoki-Regular Nerd Font 10

default_border pixel $border

for_window [class="^.*"] border pixel $border
for_window [class   = ".*"] title_format "%title"

title_align center

# workspaces and monitors
workspace $ws1 output $primary_monitor
workspace $ws2 output $primary_monitor
workspace $ws3 output $primary_monitor
workspace $ws4 output $primary_monitor
workspace $ws5 output $secondary_monitor
workspace $ws6 output $secondary_monitor
workspace $ws7 output $secondary_monitor
workspace $ws8 output $secondary_monitor
workspace $ws9 output $secondary_monitor
workspace $ws0 output $primary_monitor

# special workspaces
workspace $ws9 gaps outer 150
workspace $ws0 gaps outer 60


#  ██████╗  █████╗ ██████╗ ███████╗
# ██╔════╝ ██╔══██╗██╔══██╗██╔════╝
# ██║  ███╗███████║██████╔╝███████╗
# ██║   ██║██╔══██║██╔═══╝ ╚════██║
# ╚██████╔╝██║  ██║██║     ███████║
#  ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚══════╝
#
# gaps {{{

# Set inner/outer gaps
gaps inner $inner_gaps
gaps outer $outer_gaps

bindsym $mod+g gaps inner current toggle $inner_gaps; gaps outer current toggle $outer_gaps; exec polybar-msg cmd toggle

# Press $mod+shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace).
# If you also press shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), shift + +|-|0 (global)
bindsym $mod+shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym shift+plus  gaps inner all plus 5
        bindsym shift+minus gaps inner all minus 5
        bindsym shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "$mode_gaps"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym shift+plus  gaps outer all plus 5
        bindsym shift+minus gaps outer all minus 5
        bindsym shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "$mode_gaps"
}

# }}}
#
# windows {{{
focus_follows_mouse no

# applications in floating (+ sticky) mode
for_window [class   = "rofi"] floating enable sticky enable
for_window [class   = "Pavucontrol"] floating enable, sticky enable
for_window [class   = "minecraft-launcher"] floating enable
for_window [class   = "zoom"] floating enable
for_window [class   = "lxappearance"] floating enable
for_window [class   = "obinskit"] floating enable
for_window [class   = "microsoft teams - preview"] floating enable sticky enable

for_window [instance = "floating"] floating enable
for_window [window_role = "pop-up"] floating enable
for_window [window_role = "bubble"] floating enable
for_window [window_role = "dialog"] floating enable
for_window [window_type = "dialog"] floating enable

# Jetbrains popup float fixes
for_window [class   = "JetBrains Toolbox"] floating enable sticky enable
for_window [class   = "jetbrains-idea" title="win0"] floating enable
for_window [class   = "jetbrains-idea" title="Go to Line/Column"] floating enable
for_window [class   = "jetbrains-idea" title="Rename"] floating enable
for_window [class   = "jetbrains-idea" title="Open Project"] floating enable
for_window [class   = "jetbrains-idea" title="Welcome to IntelliJ IDEA"] floating enable

# popups during fullscreen mode
popup_during_fullscreen smart

# }}}


#
# ██╗  ██╗███████╗██╗   ██╗███████╗
# ██║ ██╔╝██╔════╝╚██╗ ██╔╝██╔════╝
# █████╔╝ █████╗   ╚████╔╝ ███████╗
# ██╔═██╗ ██╔══╝    ╚██╔╝  ╚════██║
# ██║  ██╗███████╗   ██║   ███████║
#
# keys {{{

#
# Mouse bindings
#

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# The right button toggles floating
bindsym $mod+button1 floating toggle

#
# Launch Shortcuts
#

# Terminal default
bindsym $mod+Return exec $term
# bindsym $alt_mod+Return exec $term --name floating

# Browser default
bindsym $mod+b exec $browser

# Spotify & discord
bindsym $mod+n exec spotify
bindsym $mod+m exec discord

# Rofi drun menu
bindsym $mod+space exec $bin/app-launcher --tabs --window --drun --ssh --show drun
bindsym $mod+shift+space exec $bin/app-launcher -v modes --show drun --window --drun --ssh

# Window switch menu
bindsym $mod+backslash exec rofi -show window
bindsym $alt_mod+Tab exec rofi -show window
bindsym $alt_mod+shift+tab exec rofi -show window

# Power menu
bindsym $mod+p exec $bin/powermenu
bindsym $mod+shift+p exec $bin/powermenu -with-hint

# Lock
bindsym $mod+semicolon exec $bin/lockscreen

# Screenshot
bindsym Print exec $bin/scr
bindsym shift+Print exec $bin/scr -s

# dots
bindsym $mod+period exec $term --name floating -e fish -c "dots"

#
# Workspace Navigation
#
# Move to workspace to the left
bindsym $mod+Control+Left workspace prev

# Move to workspace to the right
bindsym $mod+Control+Right workspace next

#
# i3 base
#
# reload & restart
bindsym $mod+shift+c reload
bindsym $mod+shift+r restart

# change focus between tiling / floating windows
bindsym $mod+t floating toggle

# kill focused window
bindsym $mod+q kill

# Binding mode to resize windows
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink height 10 px or 10 ppt
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow width 10 px or 10 ppt
        bindsym l resize grow height 10 px or 10 ppt
        bindsym semicolon resize set width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+plus resize grow width 10 px or 10 ppt
bindsym $mod+minus resize shrink width 10 px or 10 ppt

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move windows around
bindsym $mod+shift+Left move left
bindsym $mod+shift+Down move down
bindsym $mod+shift+Up move up
bindsym $mod+shift+Right move right
bindsym $mod+shift+h move left
bindsym $mod+shift+j move down
bindsym $mod+shift+k move up
bindsym $mod+shift+l move right

# change focus in fullscreen
bindsym $mod+tab fullscreen disable, focus right, fullscreen
bindsym $mod+shift+tab fullscreen disable, focus left, fullscreen

# split in horizontal orientation
bindsym $alt_mod+h split h

# split in vertical orientation
bindsym $alt_mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Shortcut for audio control
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound
bindsym XF86AudioMicMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound

bindsym XF86MonBrightnessUp exec brightnessctl set +5% # increase screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl set 5%- # decrease screen brightness
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioNext exec playerctl next

# Move certain apps to specific workspaces
# 1 Files
# 2 Coding
# 3 Web browser
# 4
# 5
# 6
# 7 Discord
# 8 Music
# 9

for_window [class="discord"] move container to workspace $ws7
for_window [class="slack"] move container to workspace $ws7
for_window [instance="discordapp.com__app"] move container to workspace $ws7
for_window [class="Spotify"] move container to workspace $ws8
for_window [workspace=$ws4] floating enable

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# move focused container to workspace
bindsym $mod+shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+shift+0 move container to workspace $ws0; workspace $ws0

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# }}}


# ███████╗████████╗ █████╗ ██████╗ ████████╗██╗   ██╗██████╗
# ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝██║   ██║██╔══██╗
# ███████╗   ██║   ███████║██████╔╝   ██║   ██║   ██║██████╔╝
# ╚════██║   ██║   ██╔══██║██╔══██╗   ██║   ██║   ██║██╔═══╝
# ███████║   ██║   ██║  ██║██║  ██║   ██║   ╚██████╔╝██║
# ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝
#
# startup {{{

exec --no-startup-id sleep 2 && bluetooth-autoconnect -d >/dev/null 2>&1
exec --no-startup-id $scripts/autotiling >/dev/null 2>&1
exec --no-startup-id wl-paste -t text --watch clipman store --no-persist
exec --no-startup-id nm-applet >/dev/null 2>&1
exec --no-startup-id swaymsg 'workspace '$ws7 '; exec /usr/bin/slack'
exec --no-startup-id swaymsg 'workspace '$ws5 '; exec /usr/bin/firefox-developer-edition'

exec_always --no-startup-id lch kanshi
exec_always --no-startup-id mako

output * bg `find $wallpapers | shuf -n 1 | tee ~/usr/cache/wallpaper` fill

# }}}

seat seat0 xcursor_theme DeppinDark-cursors 24

input type:keyboard {
  # Capslock key should work as escape key
  xkb_options caps:escape

  repeat_delay 190
  repeat_rate 60
}

#input 1241:41619:OBINS_OBINS {
#  xkb_options caps:escape
#}

bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #06090b
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

# vim: sw=2 fdm=marker
